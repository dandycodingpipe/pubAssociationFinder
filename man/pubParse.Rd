% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/2_preProcessing.R
\name{pubParse}
\alias{pubParse}
\title{Parse retrieved abstract data using spaCy}
\usage{
pubParse(data, method, composite, venv_path, lang_model, reduced_search)
}
\arguments{
\item{data}{PubMed entry data (see 'pubRetrieve')}

\item{method}{Filtering method ('POS' or 'DEP'). Default: 'POS'}

\item{composite}{'Y' or defaults to null. Construct composite words using n-grams. This may help reduce trivial associations between words that form a composite word (e.g insulin -> resistance)}

\item{venv_path}{REQUIRED: The path to your python venv. (see 'https://github.com/dandycodingpipe/KAFtool' for additional information)}

\item{lang_model}{REQUIRED: The spaCy language model installed in your venv}

\item{reduced_search}{The decimal represenitng the fraction of each abstract to trim. We recommend (0.2) or 20%}
}
\description{
Parsed PubMed abstracts and extract potentially relevant information according to simple Parts-of-Speech or Language dependencies. For bio-entity extraction see '
}
\examples{
pubParse(data = abstract_data, venv_path = "C:/Users/Chris/OneDrive/2023/Systox/venvJune19", lang_model = "en_core_web_lg", reduced_search = 0.2)
}
\keyword{Text}
\keyword{dependencies,}
\keyword{language}
\keyword{lemmatization,}
\keyword{n-grams}
\keyword{of}
\keyword{parsing,}
\keyword{parts}
\keyword{segmentation,}
\keyword{sentence}
\keyword{speech,}
\keyword{tokenization,}
